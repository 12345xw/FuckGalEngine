exe文件验证：
第二个GetModuleFileNameA：
004C335B  |.  68 04010000   push 0x104                               ; /BufSize = 104 (260.)
004C3360  |.  8D85 F8FEFFFF lea eax,[local.66]                       ; |
004C3366  |.  50            push eax                                 ; |PathBuffer = 00000026
004C3367  |.  56            push esi                                 ; |hModule = NULL
004C3368  |.  FF15 A8404F00 call dword ptr ds:[<&KERNEL32.GetModuleF>; \GetModuleFileNameA
004C336E  |.  85C0          test eax,eax                             ;  获取exe文件名
004C3370  |.  75 11         jnz short trinolin.004C3383
004C3372  |.  32C0          xor al,al
004C3374  |.  5E            pop esi                                  ;  0019FAF4
004C3375  |.  8B4D FC       mov ecx,[local.1]
004C3378  |.  33CD          xor ecx,ebp
004C337A  |.  E8 F92A0000   call trinolin.004C5E78
004C337F  |.  8BE5          mov esp,ebp
004C3381  |.  5D            pop ebp                                  ;  0019FAF4
004C3382  |.  C3            retn
004C3383  |>  53            push ebx
004C3384  |.  6A 00         push 0x0                                 ; /hTemplateFile = NULL
004C3386  |.  68 80000000   push 0x80                                ; |Attributes = NORMAL
004C338B  |.  6A 03         push 0x3                                 ; |Mode = OPEN_EXISTING
004C338D  |.  6A 00         push 0x0                                 ; |pSecurity = NULL
004C338F  |.  6A 01         push 0x1                                 ; |ShareMode = FILE_SHARE_READ
004C3391  |.  68 00000080   push 0x80000000                          ; |Access = GENERIC_READ
004C3396  |.  8D8D F8FEFFFF lea ecx,[local.66]                       ; |
004C339C  |.  51            push ecx                                 ; |FileName = "D:\trinoline_tr\trinoline_tr_crack.exe"
004C339D  |.  FF15 28424F00 call dword ptr ds:[<&KERNEL32.CreateFile>; \CreateFileA
004C33A3  |.  8BD8          mov ebx,eax
004C33A5  |.  85DB          test ebx,ebx
004C33A7  |.  0F84 D3000000 je trinolin.004C3480
004C33AD  |.  83FB FF       cmp ebx,-0x1
004C33B0  |.  0F84 CA000000 je trinolin.004C3480
004C33B6  |.  57            push edi                                 ;  trinolin.00562578
004C33B7  |.  6A 00         push 0x0                                 ; /pFileSizeHigh = NULL
004C33B9  |.  53            push ebx                                 ; |hFile = 00286000
004C33BA  |.  FF15 D0414F00 call dword ptr ds:[<&KERNEL32.GetFileSiz>; \GetFileSize
004C33C0  |.  8BF8          mov edi,eax                              ;  eax是文件大小
004C33C2  |.  83FF FF       cmp edi,-0x1
004C33C5  |.  75 13         jnz short trinolin.004C33DA
004C33C7  |.  5F            pop edi                                  ;  0019FAF4
004C33C8  |.  5B            pop ebx                                  ;  0019FAF4
004C33C9  |.  32C0          xor al,al
004C33CB  |.  5E            pop esi                                  ;  0019FAF4
004C33CC  |.  8B4D FC       mov ecx,[local.1]
004C33CF  |.  33CD          xor ecx,ebp
004C33D1  |.  E8 A22A0000   call trinolin.004C5E78
004C33D6  |.  8BE5          mov esp,ebp
004C33D8  |.  5D            pop ebp                                  ;  0019FAF4
004C33D9  |.  C3            retn
004C33DA  |>  57            push edi                                 ;  trinolin.00562578
004C33DB  |.  E8 C2060000   call <trinolin.allocate_buffer>
004C33E0  |.  83C4 04       add esp,0x4
004C33E3  |.  6A 00         push 0x0                                 ; /pOverlapped = NULL
004C33E5  |.  8D95 E8FEFFFF lea edx,[local.70]                       ; |
004C33EB  |.  52            push edx                                 ; |pBytesRead = NULL
004C33EC  |.  57            push edi                                 ; |BytesToRead = 562578 (5645688.)
004C33ED  |.  8BF0          mov esi,eax                              ; |
004C33EF  |.  56            push esi                                 ; |Buffer = NULL
004C33F0  |.  53            push ebx                                 ; |hFile = 00286000
004C33F1  |.  C785 E8FEFFFF>mov [local.70],0x0                       ; |
004C33FB  |.  C685 F7FEFFFF>mov byte ptr ss:[ebp-0x109],0x0          ; |
004C3402  |.  FF15 DC414F00 call dword ptr ds:[<&KERNEL32.ReadFile>] ; \ReadFile
004C3408  |.  85C0          test eax,eax
004C340A  |.  74 4D         je short trinolin.004C3459
004C340C  |.  8B85 F0FEFFFF mov eax,[local.68]                       ;  trinolin.0052D0F8
004C3412  |.  8B48 08       mov ecx,dword ptr ds:[eax+0x8]
004C3415  |.  8B10          mov edx,dword ptr ds:[eax]
004C3417  |.  51            push ecx                                 ; /Arg2 = 0019FAF4 ASCII "D:\trinoline_tr\trinoline_tr_crack.exe"
004C3418  |.  52            push edx                                 ; |Arg1 = 00000000
004C3419  |.  8BCF          mov ecx,edi                              ; |trinolin.00562578
004C341B  |.  8BC6          mov eax,esi                              ; |exe文件buffer
004C341D  |.  E8 7E000000   call <trinolin.exe_verify>               ; \trinolin.00B734A0

返回后：
00486814   .  E8 07CB0300      call trinolin.004C3320                               ; \trinolin.00B73320
00486819   .  83C4 04          add esp,0x4
0048681C   .  0FB6C8           movzx ecx,al
0048681F   .  85C9             test ecx,ecx
00486821   .  75 05            jnz short trinolin.00486828
00486823   >- E9 FBFFFFFF      jmp trinolin.00486823                                ;  exe文件验证失败死循环
00486828   >  E8 83B6FFFF      call trinolin.00481EB0                               ;  exe验证成功到达处

跳过验证
75 05 --> 74 05
同时nop掉下一句jmp死循环

反调试：
第二个GetTickCount：
00F23690   .  8B3D A8A0F700 mov     edi, dword ptr [<&KERNEL32.GetTickCount>]    ;  KERNEL32.GetTickCount
下面
cmp     ecx, 0xBB8 --> cmp ecx, ecx



Blowfish_Decrypt入口sig:

004756F3  |.  83E4 F8       and     esp, 0xFFFFFFF8
004756F6  |.  B8 54100000   mov     eax, 0x1054

Generate_Key:
每次调用call eax返回Blowfish key的一个字节，32次即为完整的key

0047FD00   > /8B4D 0C       mov     ecx, dword ptr [ebp+0xC]
0047FD03   . |8B11          mov     edx, dword ptr [ecx]
0047FD05   . |8B42 0C       mov     eax, dword ptr [edx+0xC]
0047FD08   . |56            push    esi
0047FD09   . |FFD0          call    eax
0047FD0B   . |0FB6C8        movzx   ecx, al                                           ;  al = key
0047FD0E   . |C1E7 08       shl     edi, 0x8
0047FD11   . |0BF9          or      edi, ecx
0047FD13   . |B9 01000000   mov     ecx, 0x1
0047FD18   . |03F1          add     esi, ecx
0047FD1A   . |3B75 F4       cmp     esi, dword ptr [ebp-0xC]
0047FD1D   . |7C 02         jl      short 0047FD21
0047FD1F   . |33F6          xor     esi, esi
0047FD21   > |294D 08       sub     dword ptr [ebp+0x8], ecx
0047FD24   .^\75 DA         jnz     short 0047FD00
0047FD26   .  8B45 FC       mov     eax, dword ptr [ebp-0x4]                          ;  edi为key的4个字节
0047FD29   .  8B55 F0       mov     edx, dword ptr [ebp-0x10]
0047FD2C   .  8B1402        mov     edx, dword ptr [edx+eax]
0047FD2F   .  33D7          xor     edx, edi
0047FD31   .  8910          mov     dword ptr [eax], edx




找解密crud：

00427F04   .  8BC3          mov     eax, ebx
00427F06   .  8D50 01       lea     edx, dword ptr [eax+0x1]
00427F09   .  8DA424 000000>lea     esp, dword ptr [esp]
00427F10   >  8A08          mov     cl, byte ptr [eax]                                ;  strlen(seed) !!!!
00427F12   .  40            inc     eax
00427F13   .  84C9          test    cl, cl
00427F15   .^ 75 F9         jnz     short 00427F10
00427F17   .  2BC2          sub     eax, edx
00427F19   .  8BD0          mov     edx, eax
00427F1B   .  83C8 FF       or      eax, 0xFFFFFFFF
00427F1E   .  33C9          xor     ecx, ecx
00427F20   >  3BCA          cmp     ecx, edx
00427F22   .  73 19         jnb     short 00427F3D
00427F24   .  0FBE3419      movsx   esi, byte ptr [ecx+ebx]
00427F28   .  33F0          xor     esi, eax
00427F2A   .  81E6 FF000000 and     esi, 0xFF
00427F30   .  C1E8 08       shr     eax, 0x8
00427F33   .  3304B5 C86F51>xor     eax, dword ptr [esi*4+0x516FC8]
00427F3A   .  41            inc     ecx
00427F3B   .^ EB E3         jmp     short 00427F20
00427F3D   >  F7D0          not     eax
00427F3F   .  C1E8 0C       shr     eax, 0xC
00427F42   .  25 FF000000   and     eax, 0xFF
00427F47   .  8945 D0       mov     dword ptr [ebp-0x30], eax
00427F4A   .  33FF          xor     edi, edi
00427F4C   .  8D6424 00     lea     esp, dword ptr [esp]
00427F50   >  3B7D D0       cmp     edi, dword ptr [ebp-0x30]
00427F53   .  73 52         jnb     short 00427FA7
00427F55   .  8B85 9CFEFFFF mov     eax, dword ptr [ebp-0x164]
00427F5B   .  8B8D A0FEFFFF mov     ecx, dword ptr [ebp-0x160]
00427F61   .  40            inc     eax
00427F62   .  25 FF000000   and     eax, 0xFF
00427F67   .  0FB69405 A4FE>movzx   edx, byte ptr [ebp+eax-0x15C]
00427F6F   .  8DB405 A4FEFF>lea     esi, dword ptr [ebp+eax-0x15C]
00427F76   .  03CA          add     ecx, edx
00427F78   .  81E1 FF000000 and     ecx, 0xFF
00427F7E   .  0FB69C0D A4FE>movzx   ebx, byte ptr [ebp+ecx-0x15C]



decrypt_index：

004099A0 > $  55            push    ebp                                               ;  j_decrypt_index
004099A1   .  8BEC          mov     ebp, esp
004099A3   .  83E4 F8       and     esp, 0xFFFFFFF8
004099A6   .  6A FF         push    -0x1
004099A8   .  68 0C8B4F00   push    004F8B0C                                          ;  SE 处理程序安装
004099AD   .  64:A1 0000000>mov     eax, dword ptr fs:[0]
004099B3   .  50            push    eax
004099B4   .  64:8925 00000>mov     dword ptr fs:[0], esp
004099BB   .  81EC 00020000 sub     esp, 0x200
004099C1   .  53            push    ebx
004099C2   .  56            push    esi
004099C3   .  33DB          xor     ebx, ebx
004099C5   .  8BC2          mov     eax, edx
004099C7   .  57            push    edi
004099C8   .  C74424 40 0F0>mov     dword ptr [esp+0x40], 0xF
004099D0   .  895C24 3C     mov     dword ptr [esp+0x3C], ebx
004099D4   .  885C24 2C     mov     byte ptr [esp+0x2C], bl
004099D8   .  8D70 01       lea     esi, dword ptr [eax+0x1]
004099DB   .  EB 03         jmp     short 004099E0
004099DD      8D49 00       lea     ecx, dword ptr [ecx]
004099E0   >  8A08          mov     cl, byte ptr [eax]
004099E2   .  40            inc     eax
004099E3   .  84C9          test    cl, cl
004099E5   .^ 75 F9         jnz     short 004099E0
004099E7   .  2BC6          sub     eax, esi
004099E9   .  52            push    edx
004099EA   .  8BF8          mov     edi, eax
004099EC   .  8D7424 30     lea     esi, dword ptr [esp+0x30]
004099F0   .  E8 1BC2FFFF   call    00405C10
004099F5   .  6A 04         push    0x4
004099F7   .  68 A84C5000   push    00504CA8                                          ;  ASCII ".paz"
004099FC   .  8BC6          mov     eax, esi
004099FE   .  899C24 1C0200>mov     dword ptr [esp+0x21C], ebx
00409A05   .  E8 96B0FFFF   call    00404AA0
00409A0A   .  8B4424 2C     mov     eax, dword ptr [esp+0x2C]
00409A0E   .  BE 10000000   mov     esi, 0x10
00409A13   .  397424 40     cmp     dword ptr [esp+0x40], esi
00409A17   .  73 04         jnb     short 00409A1D
00409A19   .  8D4424 2C     lea     eax, dword ptr [esp+0x2C]
00409A1D   >  53            push    ebx                                               ; /hTemplateFile
00409A1E   .  68 80000000   push    0x80                                              ; |Attributes = NORMAL
00409A23   .  6A 03         push    0x3                                               ; |Mode = OPEN_EXISTING
00409A25   .  53            push    ebx                                               ; |pSecurity
00409A26   .  6A 01         push    0x1                                               ; |ShareMode = FILE_SHARE_READ
00409A28   .  68 00000080   push    0x80000000                                        ; |Access = GENERIC_READ
00409A2D   .  50            push    eax                                               ; |FileName
00409A2E   .  FF15 6C095800 call    dword ptr [0x58096C]                              ; \CreateFileA



decrypt_item：

0040A320 >/.  55            push    ebp                                               ;  j_decrypt_item
0040A321  |.  8BEC          mov     ebp, esp
0040A323  |.  83E4 F8       and     esp, 0xFFFFFFF8
0040A326  |.  6A FF         push    -0x1
0040A328  |.  68 F4834F00   push    004F83F4                                          ;  SE 处理程序安装
0040A32D  |.  64:A1 0000000>mov     eax, dword ptr fs:[0]
0040A333  |.  50            push    eax
0040A334  |.  64:8925 00000>mov     dword ptr fs:[0], esp
0040A33B  |.  81EC 58020000 sub     esp, 0x258
0040A341  |.  53            push    ebx
0040A342  |.  56            push    esi
0040A343  |.  57            push    edi
0040A344  |.  8BD9          mov     ebx, ecx
0040A346  |.  8DB3 B4010000 lea     esi, dword ptr [ebx+0x1B4]
0040A34C  |.  68 D84B5000   push    00504BD8
0040A351  |.  33FF          xor     edi, edi
0040A353  |.  895C24 18     mov     dword ptr [esp+0x18], ebx
0040A357  |.  E8 B4B8FFFF   call    00405C10
0040A35C  |.  8B4D 08       mov     ecx, [arg.1]
0040A35F  |.  8A01          mov     al, byte ptr [ecx]
0040A361  |.  884424 0C     mov     byte ptr [esp+0xC], al
0040A365  |.  8D79 01       lea     edi, dword ptr [ecx+0x1]
0040A368  |.  84C0          test    al, al
0040A36A  |.  74 54         je      short 0040A3C0
0040A36C  |.  8D6424 00     lea     esp, dword ptr [esp]
0040A370  |>  3C 81         /cmp     al, 0x81
0040A372  |.  72 04         |jb      short 0040A378
0040A374  |.  3C 9F         |cmp     al, 0x9F
0040A376  |.  76 08         |jbe     short 0040A380
0040A378  |>  8D48 20       |lea     ecx, dword ptr [eax+0x20]
0040A37B  |.  80F9 0F       |cmp     cl, 0xF
0040A37E  |.  77 1D         |ja      short 0040A39D
0040A380  |>  8B5424 0C     |mov     edx, dword ptr [esp+0xC]
0040A384  |.  52            |push    edx
0040A385  |.  E8 267CFFFF   |call    00401FB0
0040A38A  |.  8A07          |mov     al, byte ptr [edi]
0040A38C  |.  884424 10     |mov     byte ptr [esp+0x10], al
0040A390  |.  8B4C24 10     |mov     ecx, dword ptr [esp+0x10]
0040A394  |.  51            |push    ecx
0040A395  |.  E8 167CFFFF   |call    00401FB0
0040A39A  |.  47            |inc     edi
0040A39B  |.  EB 18         |jmp     short 0040A3B5
0040A39D  |>  8D50 BF       |lea     edx, dword ptr [eax-0x41]
0040A3A0  |.  80FA 19       |cmp     dl, 0x19
0040A3A3  |.  77 06         |ja      short 0040A3AB
0040A3A5  |.  04 20         |add     al, 0x20
0040A3A7  |.  884424 0C     |mov     byte ptr [esp+0xC], al
0040A3AB  |>  8B4424 0C     |mov     eax, dword ptr [esp+0xC]
0040A3AF  |.  50            |push    eax
0040A3B0  |.  E8 FB7BFFFF   |call    00401FB0
0040A3B5  |>  8A07          |mov     al, byte ptr [edi]
0040A3B7  |.  47            |inc     edi
0040A3B8  |.  884424 0C     |mov     byte ptr [esp+0xC], al
0040A3BC  |.  84C0          |test    al, al
0040A3BE  |.^ 75 B0         \jnz     short 0040A370





string:
00420080  |>  8B43 28       /mov     eax, dword ptr [ebx+0x28]
00420083  |. |0FB630        |movzx   esi, byte ptr [eax]
00420086  |. |85F6          |test    esi, esi
00420088  |. |0F84 15050000 |je      004205A3
0042008E  |. |40            |inc     eax
0042008F  |. |8943 28       |mov     dword ptr [ebx+0x28], eax
00420092  |. |81FE 81000000 |cmp     esi, 0x81
00420098  |. |72 20         |jb      short 004200BA
0042009A  |. |81FE FE000000 |cmp     esi, 0xFE
004200A0  |. |0F86 A1000000 |jbe     00420147
004200A6  |. |81FE E0000000 |cmp     esi, 0xE0
004200AC  |. |72 0C         |jb      short 004200BA
004200AE  |. |81FE FE000000 |cmp     esi, 0xFE
004200B4  |. |0F86 8D000000 |jbe     00420147
004200BA  |> |80BB 4C030000>|cmp     byte ptr [ebx+0x34C], 0x0
004200C1  |. |0F84 60030000 |je      00420427


draw_text
0041FDE0 >/$  55            push    ebp                                 ;  draw_text
0041FDE1  |.  8BEC          mov     ebp, esp
0041FDE3  |.  64:A1 0000000>mov     eax, dword ptr fs:[0]
0041FDE9  |.  6A FF         push    -0x1
0041FDEB  |.  68 A1AA4E00   push    004EAAA1
0041FDF0  |.  50            push    eax
0041FDF1  |.  64:8925 00000>mov     dword ptr fs:[0], esp
0041FDF8  |.  81EC B4000000 sub     esp, 0xB4
0041FDFE  |.  53            push    ebx
0041FDFF  |.  8BD9          mov     ebx, ecx
0041FE01  |.  807B 08 00    cmp     byte ptr [ebx+0x8], 0x0
0041FE05  |.  56            push    esi
0041FE06  |.  57            push    edi


filename:
00419342  |.  8D78 01         lea     edi, dword ptr [eax+0x1]
00419345  |>  8A08            /mov     cl, byte ptr [eax]                      ;  eax == filename
00419347  |.  40              |inc     eax
00419348  |.  84C9            |test    cl, cl
0041934A  |.^ 75 F9           \jnz     short 00419345
0041934C  |.  2BC7            sub     eax, edi
0041934E  |.  52              push    edx
0041934F  |.  8BF8            mov     edi, eax
00419351  |.  E8 7AC5FEFF     call    004058D0
00419356  |.  8B7D 08         mov     edi, [arg.1]
00419359  |.  E8 32FEFFFF     call    00419190                                 ;  filename_info!!!!!!




generate_bmp:
00426608  |> /8B45 D0       /mov     eax, [local.12]                           ;  generate_bmp
0042660B  |. |3B45 C0       |cmp     eax, [local.16]
0042660E  |. |73 38         |jnb     short 00426648
00426610  |. |9C            |pushfd
00426611  |. |FD            |std
00426612  |. |8B4D C4       |mov     ecx, [local.15]
00426615  |. |8B75 E8       |mov     esi, [local.6]
00426618  |. |8B7D C8       |mov     edi, [local.14]
0042661B  |. |BB 03000000   |mov     ebx, 0x3
00426620  |. |BA 000000FF   |mov     edx, 0xFF000000
00426625  |> |8B06          |/mov     eax, dword ptr [esi]
00426627  |. |2BF3          ||sub     esi, ebx
00426629  |. |25 FFFFFF00   ||and     eax, 0xFFFFFF
0042662E  |. |0BC2          ||or      eax, edx
00426630  |. |AB            ||stos    dword ptr es:[edi]
00426631  |. |49            ||dec     ecx
00426632  |.^|75 F1         |\jnz     short 00426625
00426634  |. |9D            |popfd
00426635  |. |8B4D 08       |mov     ecx, [arg.1]
00426638  |. |8B41 78       |mov     eax, dword ptr [ecx+0x78]
0042663B  |. |0145 E8       |add     [local.6], eax
0042663E  |. |0145 C8       |add     [local.14], eax
00426641  |. |FF45 D0       |inc     [local.12]
00426644  |. |8BD9          |mov     ebx, ecx
00426646  |.^\EB C0         \jmp     short 00426608









